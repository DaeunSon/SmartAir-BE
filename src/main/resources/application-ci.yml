spring:
  datasource:
    url: jdbc:mysql://localhost:3307/${MYSQL_DB_NAME_FOR_TEST}
    username: ${MYSQL_DB_USERNAME}
    password: ${MYSQL_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    generate-ddl: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

  jwt:
    secret: ${JWT_SECRET}

  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - name
              - profile_nickname
              - account_email

logging:
  level:
    root: warn
    org.hibernate.SQL: info
#    org.hibernate.tool.hbm2ddl: DEBUG

mqtt:
  url: ${MQTT_URL}
  client-id: spring-client
  username:
  password:
  topic: smartair/+/airquality

firebase:
  config:
    path: ${FIREBASE_CONFIG_PATH}

cloud:
  aws:
    credentials:
      access-key: ${ENV_AWS_ACCESS_KEY}
      secret-key: ${ENV_AWS_SECRET_KEY}
    region:
      static: ap-northeast-2
    stack:
      auto: false
    s3:
      bucket: ${ENV_S3_BUCKET}

thinq:
  api:
    base-url: ${THINQ_API_BASE_URL}
    api-key: ${THINQ_API_KEY}
    country: ${THINQ_API_COUNTRY}
    client-id-prefix: ${THINQ_API_CLIENT_ID_PREFIX}

pat:
  secret-key: ${PAT_SECRET_KEY}
